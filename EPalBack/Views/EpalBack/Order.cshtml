

  
    <!-- Content Wrapper -->
    <div id="content-wrapper" class="d-flex flex-column">

        <!-- Main Content -->
        <div id="content">

            <!-- Topbar -->
            <nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow">
                <h3>訂單管理</h3>
            </nav>
            <!-- End of Topbar -->
            <!-- Begin Page Content -->
            <div class="container-fluid">
                <main role="main" class="pb-3">
                    <div class="container-fluid">
                        <div id="app" v-cloak>
                            <!-- <button v-on:click="test">click</button> -->
                            <div class="row">
                                <div class="col-12">
                                    <template>
                                        <b-breadcrumb :items="breadCrumbItems"></b-breadcrumb>
                                    </template>
                                </div>
                                <div class="col-12">
                                    <b-tabs content-class="pt-2 pb-2 px-2" fill v-model="tabIndex">
                                        <b-tab active>
                                            <template #title>
                                                <b-icon icon="arrow-up-square-fill" aria-hidden="true"></b-icon>
                                                <strong>全部訂單</strong>
                                            </template>
                                            <b-row>
                                                <b-col lg="9" class="my-1"></b-col>
                                                <b-col lg="3" class="my-1">
                                                    <b-form-group label="關鍵字搜尋" label-for="filter-input"
                                                                  label-cols-sm="4" label-align-sm="right" label-size="sm"
                                                                  class="mb-0">
                                                        <b-input-group size="sm">
                                                            <b-form-input id="filter-input" v-model="filter"
                                                                          type="search" placeholder="請輸入關鍵字">
                                                            </b-form-input>
                                                        </b-input-group>
                                                    </b-form-group>
                                                </b-col>
                                            </b-row>
                                            <b-table v-if="tabIndex==0" :items="items" :fields="fields"
                                                     responsive="sm" stacked="md" show-empty small :per-page="perPage"
                                                     :current-page="currentPage" :filter="filter">
                                                <template #table-busy>
                                                    <div class="text-center text-danger my-2">
                                                        <b-spinner class="align-middle"></b-spinner>
                                                        <strong>Loading...</strong>
                                                    </div>
                                                </template>

                                                <template #cell(productImg)="row">
                                                    <b-img-lazy class="pdlistimg" :src="row.item.productImg"
                                                                thumbnail>
                                                    </b-img-lazy>
                                                </template>

                                                <template #cell(actions)="row">
                                                    <b-button variant="info" size="sm"
                                                              v-on:click="info(row.item, row.index, $event.target)"
                                                              class="mr-1">
                                                        訂單詳情
                                                    </b-button>
                                                    <!-- <b-button size="sm"
                                                        v-on:click="ShowUpdateSaleConfirm(row.item.productId,SalesConfirmBoxProps.nonSale)"
                                                        class="mr-1">
                                                        商品下架
                                                    </b-button> -->
                                                </template>
                                            </b-table>
                                            <b-row class="">
                                                <b-col lg="6" class="ml-auto">
                                                    <b-pagination v-model="currentPage" :total-rows="totalRows"
                                                                  :per-page="perPage" align="fill" size="md" class="my-0">
                                                    </b-pagination>
                                                </b-col>
                                                <b-col lg="3" class="my-1">
                                                    <b-form-group label="每頁顯示筆數" label-for="per-page-select"
                                                                  label-cols-sm="3" label-cols-lg="9" content-cols="3"
                                                                  label-align-sm="right" label-size="sm" class="mb-0">
                                                        <b-form-select id="per-page-select" v-model="perPage"
                                                                       :options="pageOptions" size="sm"></b-form-select>
                                                    </b-form-group>
                                                </b-col>
                                            </b-row>
                                        </b-tab>


                                        <b-tab>
                                            <template #title>
                                                <b-icon icon="arrow-up-square-fill" aria-hidden="true"></b-icon>
                                                <strong>未付款訂單</strong>
                                            </template>
                                            <b-row>
                                                <b-col lg="9" class="my-1"></b-col>
                                                <b-col lg="3" class="my-1">
                                                    <b-form-group label="關鍵字搜尋" label-for="filter-input"
                                                                  label-cols-sm="4" label-align-sm="right" label-size="sm"
                                                                  class="mb-0">
                                                        <b-input-group size="sm">
                                                            <b-form-input id="filter-input" v-model="filter"
                                                                          type="search" placeholder="請輸入關鍵字">
                                                            </b-form-input>
                                                        </b-input-group>
                                                    </b-form-group>

                                                </b-col>
                                            </b-row>
                                            <b-table v-if="tabIndex==1" :items="items" :fields="fields"
                                                     responsive="sm" stacked="md" show-empty small :per-page="perPage"
                                                     :current-page="currentPage" :filter="filter">
                                                <template #table-busy>
                                                    <div class="text-center text-danger my-2">
                                                        <b-spinner class="align-middle"></b-spinner>
                                                        <strong>Loading...</strong>
                                                    </div>
                                                </template>

                                                <template #cell(productImg)="row">
                                                    <b-img-lazy class="pdlistimg" :src="row.item.productImg"
                                                                thumbnail>
                                                    </b-img-lazy>
                                                </template>

                                                <template #cell(actions)="row">
                                                    <b-button variant="info" size="sm"
                                                              v-on:click="info(row.item, row.index, $event.target)"
                                                              class="mr-1">
                                                        訂單詳情
                                                    </b-button>

                                                </template>
                                            </b-table>
                                            <b-row class="">
                                                <b-col lg="6" class="ml-auto">
                                                    <b-pagination v-model="currentPage" :total-rows="totalRows"
                                                                  :per-page="perPage" align="fill" size="md" class="my-0">
                                                    </b-pagination>
                                                </b-col>
                                                <b-col lg="3" class="my-1">
                                                    <b-form-group label="每頁顯示筆數" label-for="per-page-select"
                                                                  label-cols-sm="3" label-cols-lg="9" content-cols="3"
                                                                  label-align-sm="right" label-size="sm" class="mb-0">
                                                        <b-form-select id="per-page-select" v-model="perPage"
                                                                       :options="pageOptions" size="sm"></b-form-select>
                                                    </b-form-group>
                                                </b-col>
                                            </b-row>
                                        </b-tab>


                                        <b-tab>
                                            <template #title>
                                                <b-icon icon="arrow-up-square-fill" aria-hidden="true"></b-icon>
                                                <strong>已付款訂單</strong>
                                            </template>
                                            <b-row>
                                                <b-col lg="9" class="my-1"></b-col>
                                                <b-col lg="3" class="my-1">
                                                    <b-form-group label="關鍵字搜尋" label-for="filter-input"
                                                                  label-cols-sm="4" label-align-sm="right" label-size="sm"
                                                                  class="mb-0">
                                                        <b-input-group size="sm">
                                                            <b-form-input id="filter-input" v-model="filter"
                                                                          type="search" placeholder="請輸入關鍵字">
                                                            </b-form-input>
                                                        </b-input-group>
                                                    </b-form-group>

                                                </b-col>
                                            </b-row>
                                            <b-table v-if="tabIndex==2" :items="items" :fields="fields"
                                                     responsive="sm" stacked="md" show-empty small :per-page="perPage"
                                                     :current-page="currentPage" :filter="filter">
                                                <template #table-busy>
                                                    <div class="text-center text-danger my-2">
                                                        <b-spinner class="align-middle"></b-spinner>
                                                        <strong>Loading...</strong>
                                                    </div>
                                                </template>

                                                <template #cell(productImg)="row">
                                                    <b-img-lazy class="pdlistimg" :src="row.item.productImg"
                                                                thumbnail>
                                                    </b-img-lazy>
                                                </template>

                                                <template #cell(actions)="row">
                                                    <b-button variant="info" size="sm"
                                                              v-on:click="info(row.item, row.index, $event.target)"
                                                              class="mr-1">
                                                        訂單詳情
                                                    </b-button>

                                                </template>
                                            </b-table>
                                            <b-row class="">
                                                <b-col lg="6" class="ml-auto">
                                                    <b-pagination v-model="currentPage" :total-rows="totalRows"
                                                                  :per-page="perPage" align="fill" size="md" class="my-0">
                                                    </b-pagination>
                                                </b-col>
                                                <b-col lg="3" class="my-1">
                                                    <b-form-group label="每頁顯示筆數" label-for="per-page-select"
                                                                  label-cols-sm="3" label-cols-lg="9" content-cols="3"
                                                                  label-align-sm="right" label-size="sm" class="mb-0">
                                                        <b-form-select id="per-page-select" v-model="perPage"
                                                                       :options="pageOptions" size="sm"></b-form-select>
                                                    </b-form-group>
                                                </b-col>
                                            </b-row>
                                        </b-tab>




                                        <!-- Info modal -->
                                        <b-modal :id="productDetailsModel.id" :title="productDetailsModel.title"
                                                 header-bg-variant="info" header-text-variant="light" hide-footer
                                                 size="lg" v-on:hidden="resetProductDetailsModel" ref="my-modal"
                                                 scrollable>
                                            <el-switch v-model="enableEdit" active-text="啟用以編輯" class="mb-3">
                                            </el-switch>
                                            <!-- <template #default> -->
                                            <div v-if="isOnSaleBusy.DetailsBusy"
                                                 class="busy text-center text-danger my-2">
                                                <b-spinner class="align-middle"></b-spinner>
                                                <strong>Loading...</strong>
                                            </div>
                                            <div class="details-body" v-if="!isOnSaleBusy.DetailsBusy">
                                                <div class="row justify-content-center">

                                                    <div class="row justify-content-center">
                                                        <div class="col-12 col-md-6 my-3">
                                                            <label for="">訂單編號</label>
                                                            <input class="form-control" type="text"
                                                                   v-model="inputData.orderId" readonly>
                                                        </div>
                                                        <div class="col-12 col-md-6 my-3">
                                                            <label for="">玩家姓名</label>
                                                            <input class="form-control" type="text"
                                                                   v-model="inputData.memberName" readonly>
                                                        </div>
                                                        <div class="col-12 col-md-6 my-3">
                                                            <label for="">商品價格</label>
                                                            <input class="form-control" type="number" min="0"
                                                                   v-model="inputData.unitprice" readonly>
                                                        </div>
                                                        <div class="col-12 col-md-6 my-3">
                                                            <label for="">商品數量</label>
                                                            <input class="form-control" type="number" min="0"
                                                                   v-model="inputData.quantity"
                                                                   :readonly="!enableEdit">
                                                        </div>

                                                        <div class="col-12 col-md-6 my-3">
                                                            <label for="">付款序號</label>
                                                            <el-input class="content" type="textarea" :rows="1"
                                                                      v-model="inputData.orderConfirmation" disabled>
                                                            </el-input>
                                                        </div>


                                                        <div class="col-12 col-md-6 my-3">
                                                            <!-- <span class="demonstration">時間</span> -->
                                                            {{inputData.tempDesired}}
                                                            <label for="">時間</label>
                                                            <el-date-picker v-model="inputData.tempDesired"
                                                                            type="datetime" value-format="yyyy-MM-dd HH:mm:ss"
                                                                            placeholder="選擇日期时间" :disabled="!enableEdit">
                                                            </el-date-picker>
                                                        </div>

                                                    </div>
                                                </div>
                                            </div>
                                            <!-- </template> -->
                                            <div class="modal-footer my-3">
                                                <button type="button" class="btn btn-secondary"
                                                        @@click="hideModal">
                                                    取消
                                                </button>
                                                <button v-on:click="UpdateOrder" type="button"
                                                        class="btn btn-primary">
                                                    更新
                                                </button>
                                            </div>
                                        </b-modal>
                                    </b-tabs>
                                </div>
                            </div>
                        </div>
                    </div>
                </main>
            </div>
            <!-- /.container-fluid -->
        </div>
        <!-- End of Main Content -->
        <!-- Footer -->
        <footer class="sticky-footer bg-white">
            <div class="container my-auto">
                <div class="copyright text-center my-auto">
                    <span>Copyright &copy; Your Website 2020</span>
                </div>
            </div>
        </footer>
        <!-- End of Footer -->

    </div>


    <!-- End of Content Wrapper -->


<!-- End of Page Wrapper -->
<!-- Scroll to Top Button-->
<a class="scroll-to-top rounded" href="#page-top">
    <i class="fas fa-angle-up"></i>
</a>

<!-- Logout Modal-->
<div class="modal fade" id="logoutModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Ready to Leave?</h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">Select "Logout" below if you are ready to end your current session.</div>
            <div class="modal-footer">
                <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancel</button>
                <a class="btn btn-primary" href="login.html">Logout</a>
            </div>
        </div>
    </div>
</div>

@section endJS{
    <script>


        let app = new Vue({
            el: '#app',
            data: {
                pickerOptions: {
                    shortcuts: {
                        text: '今天',
                        onClick(picker) {
                            picker.$emit('pick', new Date());
                        }
                    },
                },
                items: [],
                fields: [
                    { key: 'orderId', label: '訂單編號', sortable: true, sortDirection: 'desc' },
                    { key: 'quantity', label: '數量', sortable: true, sortDirection: 'desc' },
                    { key: 'productId', label: '商品編號', sortable: true, sortDirection: 'desc' },
                    { key: 'customerId', label: '顧客編號', sortable: true, sortDirection: 'desc' },
                    { key: 'tempDesired', label: '訂單時間', sortable: false, sortDirection: 'desc' },
                    { key: 'orderStatusName', label: '訂單狀態', sortable: true, sortDirection: 'desc' },
                    { key: 'memberName', label: '玩家姓名', sortable: true, sortDirection: 'desc' },
                    {
                        key: 'unitPrice', label: '單價', sortable: true, sortDirection: 'desc', formatter: (value, key, item) => {
                            return '$' + CurrencyFormat(value);
                        }
                    },
                    { key: 'actions', label: '商品管理' },
                ],
                inputData: {
                    orderId: '',
                    unitprice: 0,
                    tempDesired: '',
                    orderDate: '',
                    orderStatusId: '',
                    orderConfirmation: '',
                    quantity: '',
                    memberName: ''
                },
                currentitem: null,
                tabIndex: 0,
                totalRows: 1,
                currentPage: 1,
                perPage: 5,
                pageOptions: [5, 10, 20],
                sortBy: '',
                sortDesc: false,
                //預設排序順序 小 -> 大
                sortDirection: 'asc',
                filter: null,
                filterOn: [],
                productDetailsModel: {
                    id: 'product-details-modal',
                    fields: [
                        { key: 'orderId', title: '商品編號', value: '' },
                        { key: 'unitPrice', title: '單價', value: '' },
                        { key: 'tempDesired', title: '啟示時間', value: '' },
                        { key: 'orderDate', title: '訂單時間', value: '' },
                        { key: 'orderStatusId', title: '會員編號', value: '' },
                        { key: 'orderConfirmation', title: '付款編號', value: '' },
                        { key: 'quantity', title: '付款編號', value: '' },
                        { key: 'memberName', title: '玩家姓名', value: '' },
                    ]
                },

                //描述頁面是否忙碌中，EX:進行非同步作業
                isOnSaleBusy: { PageBusy: false, DetailsBusy: false },
                isNonSaleBusy: { PageBusy: false, DetailsBusy: false },

                // url列表
                urlList: {
                    simplifyproductsOnSale: '/api/order/getallorder',
                    // simplifyproductNonSale: '/api/product/getallproduct',
                    productDetails: '/api/order/getorderDetails',
                },
                //麵包屑
                breadCrumbItems: [
                    {
                        text: '首頁',
                        href: 'index.html'
                    },
                    {
                        text: '商品列表',
                        active: true
                    }
                ],
                productDetailsimgProps: {
                    blank: true,
                    blankColor: '#bbb',
                    width: 240,
                    height: 340
                },

                //switch
                enableEdit: false,
                disable: false,

            },

            //商品明細圖片延遲載入的參數

            created() {
                //初始化頁面
                this.tabIndex = 2;
                this.getAllOrder();
            },
            watch: {
                tabIndex: function () {
                    switch (this.tabIndex) {
                        case 0:
                            this.getAllOrder()
                            break;
                        case 1:
                            this.GetUpaidOrder()
                            break;
                        case 2:
                            this.GetalreadyOrder()
                        default:
                            break;
                    }
                },
                items: function () {
                    this.totalRows = this.items.length;
                }
            },
            methods: {
                // test(){
                //     axios.get('/api/Order/GetOrderDetails/1').then(res => {
                //         console.log(res)
                //     })
                // },
                //取得所有商品
                getAllOrder() {
                    this.SetPageDefault();
                    axios.get('/api/Order/GetAllOrder')
                        .then(res => {
                            if (res.data.status == 0) {
                                this.items = res.data.result;
                                for (var i = 0; i <= res.data.result.length; i++) {
                                    if (res.data.result[i].orderStatusName == "Unpaid" || res.data.result[i].orderStatusName == "Pending") {
                                        res.data.result[i].orderStatusName = "未付款"
                                    }
                                    else {
                                        res.data.result[i].orderStatusName = "已付款"
                                    }

                                }
                                console.log(123);
                                console.log(res.data.result[0].orderStatusName)
                                console.log(res.data.result)
                            }
                        })
                },
                GetUpaidOrder() {
                    this.SetPageDefault();
                    axios.get('/api/Order/GetUpaidOrder')
                        .then(res => {
                            if (res.data.status == 0) {
                                this.items = res.data.result;
                                for (var i = 0; i <= res.data.result.length; i++) {
                                    if (res.data.result[i].orderStatusName == "Unpaid" || res.data.result[i].orderStatusName == "Pending") {
                                        res.data.result[i].orderStatusName = "未付款"
                                    }
                                    else {
                                        res.data.result[i].orderStatusName = "已付款"
                                    }
                                }
                                console.log(123);
                                console.log(res.data.result[0].orderStatusName)
                                console.log(res.data.result)
                            }
                        })
                },
                GetalreadyOrder() {
                    this.SetPageDefault();
                    axios.get('/api/Order/GetalreadyOrder')
                        .then(res => {
                            if (res.data.status == 0) {
                                this.items = res.data.result;
                                for (var i = 0; i <= res.data.result.length; i++) {
                                    if (res.data.result[i].orderStatusName == "Unpaid" || res.data.result[i].orderStatusName == "Pending") {
                                        res.data.result[i].orderStatusName = "未付款"
                                    }
                                    else {
                                        res.data.result[i].orderStatusName = "已付款"
                                    }

                                }
                                console.log(123);
                                console.log(res.data.result[0].orderStatusName)
                                console.log(res.data.result)
                            }
                        })
                },
                //取得商品明細
                getOrderDetails(uri, id) {
                    let cfg = {
                        method: 'get',
                        headers: {
                            'Content-type': 'application/json',

                        },
                        url: `${uri}/${id}`
                    };
                    axios(cfg).then(res => {
                        console.log(res)
                    })
                    console.log(cfg)
                    return axios(cfg);
                },
                hideModal() {
                    this.$refs['my-modal'].hide()
                },
                UpdateOrder() {
                    axios.post('/api/order/UpdateOrder', this.inputData)
                        .then(res => {
                            console.log(res)
                            if (res.data.status == 0 && res.data.result == true && this.tabIndex == 0) {
                                toastr.success('更新成功');
                                this.getAllOrder();
                                this.$refs['my-modal'].hide();


                            } else if (res.data.status == 0 && res.data.result == true && this.tabIndex == 1) {

                                toastr.success('更新成功');
                                this.GetUpaidOrder();
                                this.$refs['my-modal'].hide();


                            } else if (res.data.status == 0 && res.data.result == true && this.tabIndex == 2) {
                                toastr.success('更新成功');
                                this.GetalreadyOrder();
                                this.$refs['my-modal'].hide();

                            }
                            else {
                                toastr.error('更新失敗')
                                this.$refs['my-modal'].hide()
                            }


                        })
                },

                //設定頁面初始狀態
                SetPageDefault() {
                    this.items = [];
                    this.totalRows = 1;
                    this.currentPage = 1;
                    this.perPage = 10;
                    this.sortBy = '';
                    this.sortDesc = false;
                    this.filter = null;

                },

                //切換上架商品頁
                OnSalePage() {
                    this.SetPageDefault()
                },

                //切換下架商品頁
                NonSalePage() {
                    // console.log('Nonsalepage');
                    this.SetPageDefault();

                },

                //取得簡化版的商品
                getSimplifyProducts(uri, busyobj, onsale) {
                    busyobj.PageBusy = true;
                    let cfg = {
                        method: 'get',
                        headers: {
                            'Content-type': 'application/json',
                        },
                        url: uri
                    };
                    axios(cfg)
                        .then(res => {
                            if (Array.isArray(res.data.result) && res.status == 200) {

                                switch (res.data.status) {
                                    case 0:
                                        this.items = this.SimplifyProductDataProc(res.data.result, onsale);
                                        break;
                                    default:
                                        console.warn(res);
                                        break;
                                }
                            }
                            else {
                                throw new UserException('Unknown Error');
                            }
                        })
                        .catch(err => {
                            if (err.response.status === 401) {
                                LoginInvalidRedirect();
                            }
                            console.dir(err);
                        })
                        .finally(() => {
                            busyobj.PageBusy = false;
                        });
                },
                //取得商品明細
                getProductDetails(uri, id) {
                    let cfg = {
                        method: 'get',
                        headers: {
                            'Content-type': 'application/json',
                        },
                        url: `${uri}/${id}`
                    };
                    console.log(cfg)
                    axios(cfg).then(res => {
                        console.log(res)
                    })
                    return axios(cfg);
                },
                //顯示商品明細
                async info(item, index, button) {
                    try {
                        console.log(item)
                        this.enableEdit = false;
                        this.isOnSaleBusy.DetailsBusy = true;
                        this.productDetailsModel.title = `商品明細 - ID：${item.orderId}`
                        this.$root.$emit('bv::show::modal', this.productDetailsModel.id, button);
                        console.log(this.urlList.productDetails)
                        let response = await this.getOrderDetails(this.urlList.productDetails, item.orderId)
                        console.log(response)
                        console.log(item);
                        if (response.status == 200) {
                            let data = response.data.result;
                            // var timestamp=item.tempDesired;
                            console.log(data)
                            console.log(item.tempDesired);
                            // var date = new Date(timestamp*1000);
                            axios.get('/api/order/getorderDetails/1').then(res => {
                                console.log(res)
                            })


                            this.inputData.orderId = data.orderId;
                            this.inputData.unitprice = data.unitPrice;
                            this.inputData.tempDesired = data.tempDesired;
                            console.log(this.inputData.tempDesired)
                            this.inputData.orderDate = data.orderDate;
                            this.inputData.orderStatusId = data.orderStatusId;
                            this.inputData.orderConfirmation = data.orderConfirmation;
                            this.inputData.quantity = data.quantity;
                            this.inputData.memberName = item.memberName;
                            console.log(this.inputData)
                            // for (let item of this.productDetailsModel.fields) {

                            //     if (item.key === 'unitPrice') {
                            //         item.value = `$${(newdata[item.key])}.0`;
                            //         continue;
                            //     }
                            //     let temp = newdata[`${item.key}`];
                            //     item.value = (temp != '') ? temp : '無'

                            // }
                            console.log(this.inputData);
                        }
                        else {
                            throw new UserException('UnKnown Error')
                        }
                    } catch (err) {

                        console.log(err);
                    } finally {
                        this.isOnSaleBusy.DetailsBusy = false;
                    }
                },

                resetProductDetailsModel() {
                    this.productDetailsModel.title = ''
                    this.productDetailsModel.fields.map(x => x.value = '');
                },

                ProductModify(id) {
                    window.location.href = `/Product/Modify/${id}`;
                }
            }
        })
    </script>

    <script>
        //價錢三位一點
        function CurrencyFormat(num) {
            var parts = num.toString().split('.');
            parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ',');
            return parts.join('.');
        }
        Vue.filter('CurrencyString', function (num = "") {
            var parts = num.toString().split('.');
            parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ',');
            return parts.join('.');
        });

        //日期時間格式化
        function DateFormat(value, format) {
            return moment(value).format(format || 'YYYY/MM/DD');
        }
        //日期格式化
        Vue.filter('DateString', function (value, format) {
            return moment(value).format(format || 'YYYY/MM/DD')
        });

        //超過指定內容長度以...取代
        function StringContentFormat(content, maxlength = 1) {
            if (maxlength <= 0 || content.length <= maxlength) {
                return content;
            }
            else {
                return content.substring(0, maxlength - 1) + '...';
            }
        }

        //取得圖片的解析度
        function GetImageDimensions(imageData) {
            return new Promise((resovle, reject) => {
                let img = new Image();
                img.onload = () => {
                    resovle({ width: img.width, height: img.height })
                }
                img.src = imageData;
            });
        }

        //取得Quill Instance
        // function GetQuillInstance(selector) {

        //     let toolbaroptions = [
        //         ['bold', 'italic', 'underline', 'strike'],        // toggled buttons
        //         ['link'],
        //         ['blockquote', 'code-block'],

        //         [{ 'header': 1 }, { 'header': 2 }],               // custom button values
        //         [{ 'list': 'ordered' }, { 'list': 'bullet' }],
        //         [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript
        //         [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent

        //         [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown
        //         [{ 'header': [1, 2, 3, 4, 5, 6, false] }],

        //         [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme
        //         [{ 'font': [] }],
        //         [{ 'align': [] }],

        //         ['clean']                                         // remove formatting button
        //     ];

        //     return new Quill(selector, {
        //         modules: {
        //             toolbar: toolbaroptions,
        //         },
        //         theme: 'snow'
        //     });
        // }

        //取得URL的Blob資源
        // function GetBlobResourceFromURL(url) {
        //     return axios({
        //         method: 'get',
        //         url: url,
        //         responseType: 'blob'
        //     })
        //         .then(res => {
        //             return res.data;
        //         })
        // }

        //檔案讀取
        // function FileReaderByDataURL(file) {
        //     return new Promise((resolve, reject) => {
        //         let reader = new FileReader();
        //         reader.onload = (result) => {
        //             resolve(result);
        //         }
        //         reader.readAsDataURL(file);
        //     })
        // }

        function Byte2KiloByte(byte) {
            return Math.floor(byte / 1024);
        }
    </script>



}
@section topCSS{
    <style>
        .nav-tabs .nav-item.show .nav-link,
        .nav-tabs .nav-link.active {
            color: #28a745;
        }

        #app .tab-content {
            background-color: #fff;
            border-left: 2px solid #dee2e6;
            border-right: 2px solid #dee2e6;
            border-bottom: 2px solid #dee2e6;
        }

        .breadcrumb {
            padding: 0 0 0 0px;
            background-color: transparent;
            font-size: 0.875rem;
        }

        .pdlistimg {
            width: 100px;
            height: 100px;
        }
    </style>
} 